{"version":3,"sources":["fonts/Raleway-Regular.ttf","utils/service.js","components/auth/Signup.js","components/auth/Login.js","components/navbar/NavBar.js","images/logo.png","components/landing/Landing.js","components/newGoal/NewGoal.js","TheContext.js","components/goalSettings/GoalSettings.js","components/activityDetails/ActivityDetails.js","components/activities/Activities.js","components/completedGoal/CompletedGoals.js","components/calendar/Calendar.js","components/dashboard/Dashboard.js","components/persistentDrawer/PersistentDrawer.js","App.js","index.js"],"names":["axiosInstance","axios","create","baseURL","withCredentials","service","signup","userCredentials","a","post","login","logout","get","isAuthenticated","getGoals","getGoalDetails","createGoal","form","updateGoal","goalId","removeGoal","completeGoal","getActivitiesAPI","city","state","query","saveSelectedActivityFromApi","selectedActivity","getSavedActivitiesFromAPI","removeActivityFromUserActivities","activity","saveCreatedActivity","getCreatedActivitiesFromDB","deleteCreatedActivityFromDB","activityName","name","Signup","username","password","submitHandler","e","preventDefault","then","responseFromServer","changeHandler","target","value","setState","onSubmit","this","type","placeholder","onChange","className","Component","Login","user","data","props","setUser","history","push","NavBar","handleLogout","response","to","onClick","Landing","id","src","ABlogo","alt","NewGoal","handleReturnToDashboard","setGoals","useState","startDate","endDate","activities","achievements","_id","setForm","goals","htmlFor","ActivityContext","createContext","ActivityContextProvider","setActivity","Provider","children","UpdateGoal","goal","editable","setEditable","details","setDetails","useContext","console","log","useEffect","completed","updateGoals","map","eachGoal","updatedGoal","style","display","width","justifyContent","ActivityDetails","setCreatedActivities","setCreateActivity","title","start","end","description","allActivities","created_activities","float","Activities","apiResults","setApiResults","savedActivities","setSavedActivities","createdActivities","createActivity","dataForChart","setDataForChart","results","activitiesAlreadySaved","assetGuid","filteredActivities","filter","includes","hashedCategory","element","arrayOfAssetCategories","assetCategories","categoryObj","categoryName","category","hashKeys","Object","keys","dataArray","forEach","key","handleRemoveActivity","savedActivity","handleDeleteCreatedActivity","createdActivity","assetName","homePageUrlAdr","length","height","chartType","loader","options","rootProps","index","activitiesFromDB","activityFromApi","handleSelectActivity","CompletedGoals","completedGoals","bodyStyle","fontFamily","fontSize","marginTop","localizer","momentLocalizer","moment","CalendarComponent","createdEvents","setCreatedEvents","defaultDate","Date","defaultView","events","DashboardFunction","selectedGoal","manageActivities","manageCompletedGoals","manageCalendar","drawerWidth","useStyles","makeStyles","theme","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","background","drawerHeader","alignItems","padding","mixins","toolbar","content","flexGrow","contentShift","PersistentDrawer","classes","useTheme","handleDrawerClose","setOpen","React","open","setCompletedGoals","activeGoals","setActiveGoals","setSelectedGoal","setCreateGoal","setManageActivities","setManageCalendar","setManageCompletedGoals","getGoalsFromDB","active","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","ListItem","button","Drawer","anchor","paper","List","direction","handleGoalSelect","ListItemIcon","ListItemText","primary","Divider","disableTypography","App","updateUser","userData","fetchData","path","render","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e28a5c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Raleway-Regular.c268e80b.ttf\";","import axios from \"axios\";\r\n\r\n// create a new instance of axios for which all the routes are pointing to the baseURL\r\n// withCredentials allows us to convey cookie information from and to the server\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:5000\",\r\n  withCredentials: true,\r\n});\r\n\r\nconst service = {\r\n  // auth CRUD operations\r\n  signup: async (userCredentials) =>\r\n    await axiosInstance.post(\"/auth/signup\", userCredentials),\r\n  login: async (userCredentials) =>\r\n    await axiosInstance.post(\"/auth/login\", userCredentials),\r\n  logout: async () => await axiosInstance.get(\"/auth/logout\"),\r\n  isAuthenticated: async () => await axiosInstance.get(\"/auth/isAuthenticated\"),\r\n  // goals CRUD\r\n  getGoals: async () => await axiosInstance.get(\"/goals\"),\r\n  getGoalDetails: async () => await axiosInstance.get(\"/goals/:goalId\"),\r\n  createGoal: async (form) => await axiosInstance.post(\"/goals/new\", form),\r\n  updateGoal: async ({ form, goalId }) =>\r\n    await axiosInstance.post(\"/goals/update\", { form: form, goalId: goalId }),\r\n  removeGoal: async (goalId) =>\r\n    await axiosInstance.post(\"/goals/remove\", goalId),\r\n  completeGoal: async (goalId) =>\r\n    await axiosInstance.post(\"/goals/completed\", goalId),\r\n  // activity api CRUD\r\n  getActivitiesAPI: async (form) =>\r\n    await axiosInstance.get(\r\n      `/activities/api?city=${form.city}&state=${form.state}&query=${form.query}`\r\n    ),\r\n  saveSelectedActivityFromApi: async (selectedActivity) =>\r\n    await axiosInstance.post(\"/activities/save\", selectedActivity),\r\n  getSavedActivitiesFromAPI: async () => await axiosInstance.get(\"/activities\"),\r\n  removeActivityFromUserActivities: async (activity) =>\r\n    await axiosInstance.post(\"/activities/remove\", activity),\r\n  // user created activities CRUD\r\n  saveCreatedActivity: async (activity) =>\r\n    await axiosInstance.post(\"/created-activities/create\", activity),\r\n  getCreatedActivitiesFromDB: async () =>\r\n    await axiosInstance.get(\"/created-activities\"),\r\n  deleteCreatedActivityFromDB: async (activityName) =>\r\n    await axiosInstance.post(\"/created-activities/delete\", {\r\n      name: activityName,\r\n    }),\r\n};\r\n\r\nexport default service;\r\n","import service from \"../../utils/service\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Signup extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    service.signup({ username, password }).then((responseFromServer) => {\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.username}\r\n          placeholder=\"username\"\r\n          name=\"username\"\r\n          onChange={this.changeHandler}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={this.state.password}\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          onChange={this.changeHandler}\r\n        />\r\n        <button className={\"reg\"}>SIGN UP</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import service from \"../../utils/service\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    service.login({ username, password }).then((responseFromServer) => {\r\n      const { user } = responseFromServer.data;\r\n      this.props.setUser(user);\r\n      this.props.history.push(\"/dashboard\");\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler} className={\"reg\"}>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.username}\r\n          placeholder=\"username\"\r\n          name=\"username\"\r\n          className={\"reg\"}\r\n          onChange={this.changeHandler}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={this.state.password}\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          onChange={this.changeHandler}\r\n        />\r\n        <button className={\"reg\"}>LOGIN</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\nimport service from \"../../utils/service\";\r\n\r\nexport default class NavBar extends Component {\r\n\r\n  handleLogout = () => {\r\n    service.logout().then((response) => {\r\n      this.props.setUser(null);\r\n      this.props.history.push(\"/\")\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"navbar\"}>\r\n        <ul className={\"bold-small\"}>\r\n          <Link to=\"/\" >\r\n            <li>HOME</li>\r\n          </Link>\r\n        </ul>\r\n        <ul className={\"bold\"}>\r\n          {this.props.user && (\r\n            <>\r\n              <Link to=\"/dashboard\">\r\n                <li>DASHBOARD</li>\r\n              </Link>\r\n              <button to=\"/auth/logout\" onClick={this.handleLogout}>\r\n                <li>LOGOUT</li>\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          {!this.props.user && (\r\n            <>\r\n              <Link to=\"/auth/login\">\r\n                <li>LOGIN</li>\r\n              </Link>\r\n              <Link to=\"/auth/signup\">\r\n                <li>SIGN UP</li>\r\n              </Link>\r\n            </>\r\n          )}\r\n\r\n          {this.props.user && <li>{this.props.user.username}</li>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/logo.cf48a7c3.png\";","import React, { Component } from 'react';\r\nimport \"./Landing.css\";\r\nimport ABlogo from '../../images/logo.png'\r\n\r\nexport default class Landing extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div id=\"landing-main\">\r\n                <img src={ABlogo} alt=\"AB logo\" />\r\n                <div id=\"landing-chart\">\r\n                    This will be a graph\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport service from \"../../utils/service\";\r\n\r\nexport default function NewGoal({ user, handleReturnToDashboard, setGoals }) {\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    activities: [],\r\n    achievements: [],\r\n    user: user._id,\r\n  });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    await service.createGoal(form).then((response) => {\r\n      setGoals(response.data.goals);\r\n      handleReturnToDashboard();\r\n    });\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>{`You go ${user.username}!`}</h1>\r\n      <h2>{`Complete the form below to create a new goal!`}</h2>\r\n\r\n      {/* create a UI/wizard or logic to help users create a goal */}\r\n      <div>\r\n        <form onSubmit={submitHandler}>\r\n          <label htmlFor=\"name\">Name your goal!</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name of goal\"\r\n            name=\"name\"\r\n            onChange={changeHandler}\r\n          />\r\n          <label htmlFor=\"startDate\">Select Goal Start Date</label>\r\n          <input type=\"date\" name=\"startDate\" onChange={changeHandler} />\r\n          <label htmlFor=\"endDate\">Select Goal End Date</label>\r\n          <input type=\"date\" name=\"endDate\" onChange={changeHandler} />\r\n          <label htmlFor=\"activities\">\r\n            Select Activities to accomplish your goal!\r\n          </label>\r\n          <input\r\n            type=\"enum\"\r\n            placeholder=\"activities\"\r\n            name=\"activities\"\r\n            onChange={changeHandler}\r\n          />\r\n          <button>Create Goal!</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ActivityContext = createContext();\r\n\r\nexport const ActivityContextProvider = (props) => {\r\n  const [activity, setActivity] = useState([]);\r\n\r\n  return (\r\n    <ActivityContext.Provider value={{ activity, setActivity }}>\r\n      {props.children}\r\n    </ActivityContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport service from \"../../utils/service\";\r\nimport { ActivityContext } from \"../../TheContext\";\r\n\r\nexport default function UpdateGoal({\r\n  goal,\r\n  handleReturnToDashboard,\r\n  goals,\r\n  setGoals,\r\n}) {\r\n  const [editable, setEditable] = useState(false);\r\n  const [details, setDetails] = useState(null);\r\n  const { activity } = useContext(ActivityContext);\r\n  console.log(\"this is activities\", activity);\r\n  useEffect(() => {\r\n    setDetails(goal);\r\n  }, [goal]);\r\n\r\n  const [form, setForm] = useState({\r\n    name: goal.name ? goal.name : `undefined`,\r\n    startDate: goal.startDate ? goal.startDate : \"\",\r\n    endDate: goal.endDate ? goal.endDate : \"\",\r\n    activities: goal.activities ? goal.activities : `undefined`,\r\n    achievements: goal.achievements ? goal.achievements : `undefined`,\r\n    user: goal.user[0],\r\n    completed: goal.completed,\r\n  });\r\n\r\n  const handleEdit = () => {\r\n    setEditable(!editable);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    service.completeGoal({ goalId: goal._id }).then((response) => {\r\n      // update goals state instead of recalling service call from Persistant Drawer\r\n      // find which goal is pointed at the same place in storage, then update that goal\r\n      const updateGoals = goals.map((eachGoal) =>\r\n        eachGoal === goal ? response.data.updatedGoal : eachGoal\r\n      );\r\n      setGoals(updateGoals);\r\n      handleReturnToDashboard();\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    service.updateGoal({ form: form, goalId: goal._id }).then((response) => {\r\n      const updateGoals = goals.map((eachGoal) =>\r\n        eachGoal === goal ? response.data.updatedGoal : eachGoal\r\n      );\r\n      setGoals(updateGoals);\r\n      handleReturnToDashboard();\r\n    });\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleRemoveGoal = () => {\r\n    service.removeGoal({ goalId: goal._id }).then((response) => {\r\n      setGoals(response.data.goals);\r\n    });\r\n    handleReturnToDashboard();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {details && (\r\n        <div>\r\n          {!editable ? (\r\n            <>\r\n              <div>{`Goal settings for ${goal.name} ${activity}`}</div>\r\n              <h2>{`Name: ${goal.name}`}</h2>\r\n              <h2>{`Activities: `} </h2>\r\n              {details.activities.map((activity) => {\r\n                return <h3 key={activity}>{activity}</h3>;\r\n              })}\r\n              {goal.completed ? (\r\n                <h1>Goal Complete!</h1>\r\n              ) : (\r\n                <>\r\n                  <button onClick={handleComplete}>Mark as Complete!</button>\r\n                  <button onClick={handleEdit}>Edit</button>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div>\r\n              <form onSubmit={submitHandler}>\r\n                <label htmlFor=\"name\">Name your goal!</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name of goal\"\r\n                  name=\"name\"\r\n                  onChange={changeHandler}\r\n                  value={form.name}\r\n                />\r\n                <label htmlFor=\"startDate\">Select Goal Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  onChange={changeHandler}\r\n                  value={form.startDate}\r\n                />\r\n                <label htmlFor=\"endDate\">Select Goal End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"endDate\"\r\n                  onChange={changeHandler}\r\n                  value={form.endDate}\r\n                />\r\n                <label htmlFor=\"activities\">\r\n                  Select Activities to accomplish your goal!\r\n                </label>\r\n                <input\r\n                  type=\"enum\"\r\n                  placeholder=\"activities\"\r\n                  name=\"activities\"\r\n                  onChange={changeHandler}\r\n                  value={form.activities}\r\n                />\r\n                <button>Update Goal!</button>\r\n              </form>\r\n              <button onClick={handleRemoveGoal}>Remove</button>\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}\r\n          ></div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport service from \"../../utils/service\";\r\nimport \"./ActivityDetails.css\";\r\n\r\nexport default function ActivityDetails({\r\n  setCreatedActivities,\r\n  setCreateActivity,\r\n}) {\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    await service.saveCreatedActivity(form).then((response) => {\r\n      const allActivities = response.data.created_activities;\r\n      setCreatedActivities(allActivities);\r\n      setCreateActivity(false);\r\n    });\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={\"reg\"}>Enter the details of your activity!</div>\r\n      <br />\r\n      <form onSubmit={submitHandler} className={\"reg\"}>\r\n        <label htmlFor=\"title\" id={\"formInput\"}>\r\n          Activity Title:{\" \"}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          name=\"title\"\r\n          onChange={changeHandler}\r\n          value={form.title}\r\n          style={{ width: \"300px\", float: \"right\" }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"startDate\">Select Activity Start Date</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"start\"\r\n          onChange={changeHandler}\r\n          value={form.start}\r\n        />\r\n        <label htmlFor=\"end\">Select Activity End Date</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"end\"\r\n          onChange={changeHandler}\r\n          value={form.end}\r\n        />\r\n        <label htmlFor=\"state\" id={\"formInput\"}>\r\n          Activity Description:{\" \"}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          name=\"description\"\r\n          onChange={changeHandler}\r\n          value={form.description}\r\n          style={{ width: \"300px\", float: \"right\" }}\r\n        />\r\n        <br />\r\n        <button>Create Activity!</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./Activities.css\";\r\nimport service from \"../../utils/service\";\r\nimport Chart from \"react-google-charts\";\r\nimport ActivityDetails from \"../activityDetails/ActivityDetails\";\r\nimport { ActivityContext } from \"../../TheContext\";\r\n\r\nexport default function Activities() {\r\n  const [apiResults, setApiResults] = useState([]);\r\n  const [savedActivities, setSavedActivities] = useState([]);\r\n  const [createdActivities, setCreatedActivities] = useState([]);\r\n  const [createActivity, setCreateActivity] = useState(false);\r\n  const [dataForChart, setDataForChart] = useState([\r\n    [\"Category\", \"Count From Results\"],\r\n  ]);\r\n  const [form, setForm] = useState({\r\n    city: \"\",\r\n    state: \"\",\r\n    query: \"\",\r\n  });\r\n  const { setActivity } = useContext(ActivityContext);\r\n\r\n  useEffect(() => {\r\n    service.getCreatedActivitiesFromDB().then((response) => {\r\n      setCreatedActivities(response.data.created_activities);\r\n    });\r\n    service.getSavedActivitiesFromAPI().then((response) => {\r\n      setSavedActivities(response.data.activities);\r\n    });\r\n    service.getActivitiesAPI(form).then((response) => {\r\n      const activities = response.data.activities.results;\r\n      // create array of Guids to filter api results against\r\n      let activitiesAlreadySaved = savedActivities.map(\r\n        (activity) => activity.assetGuid\r\n      );\r\n      // don't show activities that we already have saved\r\n      const filteredActivities = activities.filter((activity) => {\r\n        return !activitiesAlreadySaved.includes(activity.assetGuid);\r\n      });\r\n      setApiResults(filteredActivities);\r\n\r\n      // create hashtable to analyze categories from api results\r\n      const hashedCategory = {};\r\n      for (const element in filteredActivities) {\r\n        const arrayOfAssetCategories =\r\n          filteredActivities[element].assetCategories;\r\n        for (const categoryObj in arrayOfAssetCategories) {\r\n          const categoryName =\r\n            arrayOfAssetCategories[categoryObj].category.categoryName;\r\n\r\n          hashedCategory[categoryName] = hashedCategory[categoryName]\r\n            ? (hashedCategory[categoryName] += 1)\r\n            : 1;\r\n        }\r\n      }\r\n      const hashKeys = Object.keys(hashedCategory);\r\n      const dataArray = [];\r\n      hashKeys.forEach((key) => {\r\n        dataArray.push([key, hashedCategory[key]]);\r\n      });\r\n      setDataForChart([...dataForChart, ...dataArray]);\r\n    });\r\n  }, [dataForChart]);\r\n\r\n  useEffect(() => {\r\n    setActivity(savedActivities);\r\n  }, [setActivity, savedActivities]);\r\n\r\n  const handleSelectActivity = (activity) => {\r\n    service.saveSelectedActivityFromApi(activity).then((response) => {\r\n      const activitiesFromDB = response.data.activities;\r\n      setSavedActivities([...activitiesFromDB]);\r\n      setApiResults(\r\n        apiResults.filter(\r\n          (activityFromApi) => activityFromApi.assetGuid !== activity.assetGuid\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleRemoveActivity = async (activity) => {\r\n    await service.removeActivityFromUserActivities(activity);\r\n    setSavedActivities(\r\n      savedActivities.filter(\r\n        (savedActivity) => savedActivity.assetGuid !== activity.assetGuid\r\n      )\r\n    );\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    await service.getActivitiesAPI(form).then((response) => {\r\n      const activities = response.data.activities.results;\r\n      // create array of Guids to filter api results against\r\n      let activitiesAlreadySaved = savedActivities.map(\r\n        (activity) => activity.assetGuid\r\n      );\r\n      // don't show activities that we already have saved\r\n      const filteredActivities = activities.filter((activity) => {\r\n        return !activitiesAlreadySaved.includes(activity.assetGuid);\r\n      });\r\n      setApiResults(filteredActivities);\r\n\r\n      // create hashtable to analyze categories from api results\r\n      const hashedCategory = {};\r\n      for (const element in filteredActivities) {\r\n        const arrayOfAssetCategories =\r\n          filteredActivities[element].assetCategories;\r\n        for (const categoryObj in arrayOfAssetCategories) {\r\n          const categoryName =\r\n            arrayOfAssetCategories[categoryObj].category.categoryName;\r\n\r\n          hashedCategory[categoryName] = hashedCategory[categoryName]\r\n            ? (hashedCategory[categoryName] += 1)\r\n            : 1;\r\n        }\r\n      }\r\n      const hashKeys = Object.keys(hashedCategory);\r\n      const dataArray = [];\r\n      hashKeys.forEach((key) => {\r\n        dataArray.push([key, hashedCategory[key]]);\r\n      });\r\n      setDataForChart([...dataForChart, ...dataArray]);\r\n    });\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleCreateActivity = () => {\r\n    setCreateActivity(true);\r\n  };\r\n\r\n  const handleDeleteCreatedActivity = async (activityName) => {\r\n    console.log(\"activityName\", activityName);\r\n    await service.deleteCreatedActivityFromDB(activityName);\r\n    setCreatedActivities(\r\n      createdActivities.filter(\r\n        (createdActivity) => createdActivity.name !== activityName\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br></br>\r\n      <h3>My saved activities</h3>\r\n      <div id={\"saved-activity-main\"} className={\"reg\"}>\r\n        {savedActivities ? (\r\n          <>\r\n            {savedActivities.map((activity) => {\r\n              return (\r\n                <div\r\n                  id={\"activity-card\"}\r\n                  key={activity.assetGuid}\r\n                  onClick={() => handleRemoveActivity(activity)}\r\n                >\r\n                  <p>{activity.assetName}</p>\r\n                  <p>{activity.homePageUrlAdr}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h3 className={\"reg\"}>You have no saved activites</h3>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <h3 id={\"h3title\"} className={\"bold\"}>\r\n          YOUR ACTIVITY LOG\r\n        </h3>\r\n        <hr />\r\n        <br></br>\r\n        {createActivity ? (\r\n          <ActivityDetails\r\n            setCreatedActivities={setCreatedActivities}\r\n            setCreateActivity={setCreateActivity}\r\n          />\r\n        ) : (\r\n          <div>\r\n            <h3 className={\"bold\"}>Add an activity!</h3>\r\n            <button onClick={handleCreateActivity} className={\"reg\"}>\r\n              Create Activity\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div>\r\n          {console.log(\"created activities at POU\", createdActivities)}\r\n          {createdActivities ? (\r\n            <>\r\n              <div id={\"saved-activity-main\"}>\r\n                {createdActivities.map((activity) => {\r\n                  return (\r\n                    <div\r\n                      id={\"activity-card\"}\r\n                      key={activity._id}\r\n                      onClick={() => handleDeleteCreatedActivity(activity.name)}\r\n                    >\r\n                      <p>{activity.name}</p>\r\n                      <p>{activity.description}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>No created activities.</p>\r\n            </>\r\n          )}\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n      <br></br>\r\n      <div>\r\n        {apiResults.length > 0 ? (\r\n          <Chart\r\n            width={\"700px\"}\r\n            height={\"400px\"}\r\n            chartType=\"PieChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={dataForChart}\r\n            options={{\r\n              title: \"My Goal Categories\",\r\n            }}\r\n            rootProps={{ \"data-testid\": \"1\" }}\r\n          />\r\n        ) : (\r\n          <p>Chart Area</p>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <h3 className={\"bold\"}>\r\n        Looking to try something new? Search our database for new activities!\r\n      </h3>\r\n      <hr />\r\n      <br />\r\n      <div className=\"reg\">\r\n        <div>\r\n          <div id=\"query-activities-main\">\r\n            <form onSubmit={submitHandler}>\r\n              <label htmlFor=\"name\" id={\"formLabel\"}>\r\n                City:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                name=\"city\"\r\n                onChange={changeHandler}\r\n                value={form.city}\r\n                style={{ width: \"300px\", float: \"right\" }}\r\n              />\r\n              <br />\r\n              <label htmlFor=\"state\" id={\"formLabel\"}>\r\n                State:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                name=\"state\"\r\n                onChange={changeHandler}\r\n                value={form.state}\r\n                style={{ width: \"300px\", float: \"right\" }}\r\n              />\r\n              <br />\r\n              <label htmlFor=\"query\" id={\"formLabel\"}>\r\n                Keywords:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                name=\"query\"\r\n                onChange={changeHandler}\r\n                value={form.query}\r\n                style={{ width: \"300px\", float: \"right\" }}\r\n              />\r\n              <br />\r\n              <button>Search Activities!</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <div id={\"activity-main\"}>\r\n          {apiResults &&\r\n            apiResults.map((activity, index) => {\r\n              return (\r\n                <div\r\n                  id={\"activity-card\"}\r\n                  onClick={() => handleSelectActivity(activity)}\r\n                  key={activity.assetGuid}\r\n                >\r\n                  <p>{activity.assetName}</p>\r\n                  <p>{activity.homePageUrlAdr}</p>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CompletedGoals({ completedGoals }) {\r\n  const topStyle = {\r\n    marginTop: '80px',\r\n    fontFamily: 'raleway'\r\n  }\r\n  const bodyStyle = {\r\n    fontFamily: 'raleway',\r\n    fontSize: 14,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 style={topStyle}>Completed Goals!</h2>\r\n      {completedGoals.map((goal) => {\r\n        return <h3 key={goal._id} style={bodyStyle}>{goal.name}</h3>;\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\n// import ApiCalendar from \"react-google-calendar-api\";\r\nimport \"./Calendar.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { ActivityContext } from \"../../TheContext\";\r\nimport service from \"../../utils/service\";\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport default function CalendarComponent(props) {\r\n  const { activity } = useContext(ActivityContext);\r\n  const [createdEvents, setCreatedEvents] = useState([]);\r\n  const [savedEventsFromAPI, setSavedEventsFromAPI] = useState([]);\r\n\r\n  useEffect(() => {\r\n    service.getCreatedActivitiesFromDB().then((response) => {\r\n      setCreatedEvents(response.data.created_activities);\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"You've also loaded your activities:\", activity);\r\n  console.log(\"You have loaded the calendar!\");\r\n  return (\r\n    <>\r\n      <div className=\"CalendarComponent\">\r\n        <Calendar\r\n          localizer={localizer}\r\n          defaultDate={new Date()}\r\n          defaultView=\"month\"\r\n          events={createdEvents}\r\n          style={{ height: \"100vh\" }}\r\n        />\r\n      </div>\r\n      ;\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport NewGoal from \"../newGoal/NewGoal\";\r\nimport GoalSetting from \"../goalSettings/GoalSettings\";\r\nimport Activities from \"../activities/Activities\";\r\nimport CompletedGoals from \"../completedGoal/CompletedGoals\";\r\nimport Calendar from \"../calendar/Calendar\";\r\n\r\nexport default function DashboardFunction({\r\n  selectedGoal,\r\n  user,\r\n  handleReturnToDashboard,\r\n  createGoal,\r\n  goals,\r\n  setGoals,\r\n  manageActivities,\r\n  manageCompletedGoals,\r\n  completedGoals,\r\n  manageCalendar,\r\n}) {\r\n  const renderFunction = () => {\r\n    // conditional renders components based on props\r\n    if (createGoal) {\r\n      return (\r\n        <NewGoal\r\n          user={user}\r\n          setGoals={setGoals}\r\n          handleReturnToDashboard={handleReturnToDashboard}\r\n        />\r\n      );\r\n    } else if (selectedGoal !== null) {\r\n      return (\r\n        <>\r\n          <GoalSetting\r\n            goal={selectedGoal}\r\n            user={user}\r\n            goals={goals}\r\n            setGoals={setGoals}\r\n            handleReturnToDashboard={handleReturnToDashboard}\r\n          />\r\n        </>\r\n      );\r\n    } else if (manageActivities) {\r\n      return <Activities />;\r\n    } else if (manageCompletedGoals) {\r\n      return <CompletedGoals completedGoals={completedGoals} />;\r\n    } else if (manageCalendar) {\r\n      return <Calendar completedGoals={completedGoals} />;\r\n    } else {\r\n      return <h3>{\"Click Hamburger Menu To Begin!\"}</h3>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>{renderFunction()}</div>\r\n\r\n      {/* <savedActivitiesContext.Consumer>\r\n        {(value) =>\r\n          value.map((thing) => {\r\n            return <h2>{thing.assetName}</h2>;\r\n          })\r\n        }\r\n      </savedActivitiesContext.Consumer> */}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport service from \"../../utils/service\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport ABlogo from \"../../images/logo.png\";\r\n\r\n// const { google } = require(\"googleapis\");\r\n// const { Oauth2 } = google.auth;\r\n\r\n// const oAuth2Client = new Oauth2(\r\n//   \"699721081499-np2smh60bhbfvjqhrgkhk4n250376flq.apps.googleusercontent.com\",\r\n//   \"qKsT6cAoKxOkm9YkDKQG5WaR\"\r\n// );\r\n\r\n// oAuth2Client.setCredentials({\r\n//   refresh_token:\r\n//     \"1//045CKKGIFS2LgCgYIARAAGAQSNwF-L9Irj__if-S3yugnNntg6AQvZuKlbrFyE0uMpiKwIkE3_bcAGoP6TgPpUd-zQxyjIR_5kVU\",\r\n// });\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    background: \"white\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n    background: \"white\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawer({ user, setUser, history }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    service.logout().then(() => {\r\n      setUser(null);\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  //use hooks to define state\r\n  const [open, setOpen] = React.useState(false);\r\n  const [goals, setGoals] = useState([]);\r\n  const [completedGoals, setCompletedGoals] = useState([]);\r\n  const [activeGoals, setActiveGoals] = useState([]);\r\n  const [selectedGoal, setSelectedGoal] = useState(null);\r\n  const [createGoal, setCreateGoal] = useState(false);\r\n  const [manageActivities, setManageActivities] = useState(false);\r\n  const [manageCalendar, setManageCalendar] = useState(false);\r\n  const [manageCompletedGoals, setManageCompletedGoals] = useState(false);\r\n\r\n  // goals specific to user\r\n  const getGoalsFromDB = async () => {\r\n    const data = await service.getGoals();\r\n    setGoals(data.data.goals ? data.data.goals : null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGoalsFromDB();\r\n  }, [createGoal]);\r\n\r\n  useEffect(() => {\r\n    const active = goals.filter((goal) => goal.completed !== true);\r\n    const completed = goals.filter((goal) => goal.completed === true);\r\n    setActiveGoals(active);\r\n    setCompletedGoals(completed);\r\n  }, [goals]);\r\n\r\n  //updates everytime selectedGoal is changed\r\n  useEffect(() => {\r\n    setCreateGoal(false);\r\n    handleDrawerClose();\r\n  }, [selectedGoal]);\r\n\r\n  const handleGoalSelect = (goal) => {\r\n    setSelectedGoal(goal);\r\n  };\r\n\r\n  const handleCreateGoal = () => {\r\n    setCreateGoal(true);\r\n    handleDrawerClose();\r\n  };\r\n\r\n  const handleReturnToDashboard = () => {\r\n    setCreateGoal(false);\r\n    setSelectedGoal(null);\r\n    setManageActivities(false);\r\n    setManageCompletedGoals(false);\r\n    history.push(\"/dashboard\", { ...user });\r\n  };\r\n\r\n  const handleActivities = () => {\r\n    setManageActivities(true);\r\n    setCreateGoal(false);\r\n    setSelectedGoal(null);\r\n    setManageCompletedGoals(false);\r\n    setManageCalendar(false);\r\n    handleDrawerClose();\r\n  };\r\n\r\n  const handleCalendar = () => {\r\n    setManageCalendar(true);\r\n    setCreateGoal(false);\r\n    setSelectedGoal(null);\r\n    setManageActivities(false);\r\n    setManageCompletedGoals(false);\r\n    handleDrawerClose();\r\n  };\r\n\r\n  const handleCompletedGoals = () => {\r\n    setManageCompletedGoals(true);\r\n    setManageCalendar(true);\r\n    setCreateGoal(false);\r\n    setSelectedGoal(null);\r\n    setManageActivities(false);\r\n    handleDrawerClose();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                handleReturnToDashboard();\r\n              }}\r\n            >\r\n              <img src={ABlogo} alt=\"AB logo\" />\r\n            </ListItem>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        background=\"white\"\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <List>\r\n              <ListItem className={\"reg\"}>\r\n                {user && <p>{user.username}</p>}\r\n              </ListItem>\r\n            </List>\r\n          </Typography>\r\n\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <List>\r\n          {activeGoals ? (\r\n            activeGoals.map((goal) => (\r\n              <ListItem\r\n                className={\"reg\"}\r\n                button\r\n                key={goal._id}\r\n                onClick={() => {\r\n                  handleGoalSelect(goal);\r\n                }}\r\n              >\r\n                <ListItemIcon>\r\n                  <AssignmentTurnedInIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={goal.name} />\r\n              </ListItem>\r\n            ))\r\n          ) : (\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <ListIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>No Active Goals</ListItemText>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n\r\n        <List>\r\n          <Divider />\r\n\r\n          {/* <Typography variant=\"h6\" noWrap>\r\n            <List>\r\n              <ListItem>{user && <p>{user.username}</p>}</ListItem>\r\n              <Divider />\r\n              <ListItem\r\n                className={\"reg\"}\r\n                button\r\n                onClick={() => {\r\n                  handleCreateGoal();\r\n                }}\r\n              >\r\n                Create a Goal\r\n              </ListItem>\r\n            </List>\r\n          </Typography> */}\r\n\r\n          <ListItem\r\n            className={\"reg\"}\r\n            button\r\n            onClick={() => {\r\n              handleCreateGoal();\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <AddBoxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText disableTypography className={[\"reg\", \"big\"]}>\r\n              CREATE A GOAL\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={handleActivities}>\r\n            <ListItemIcon>\r\n              <ListIcon />\r\n            </ListItemIcon>\r\n            <ListItemText disableTypography className={[\"reg\", \"big\"]}>\r\n              ACTIVITIES\r\n            </ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem className={\"reg\"} button onClick={handleCalendar}>\r\n            <ListItemIcon>\r\n              <CalendarTodayIcon />\r\n            </ListItemIcon>\r\n            <ListItemText disableTypography className={[\"reg\", \"big\"]}>\r\n              CALENDAR\r\n            </ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button onClick={handleCompletedGoals}>\r\n            <ListItemIcon>\r\n              <DoneIcon />\r\n            </ListItemIcon>\r\n            <ListItemText disableTypography className={[\"reg\", \"big\"]}>\r\n              COMPLETED GOALS\r\n            </ListItemText>\r\n          </ListItem>\r\n\r\n          <Divider />\r\n          <ListItem button onClick={handleLogout}>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText disableTypography className={[\"reg\", \"big\"]}>\r\n              LOGOUT\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main>\r\n        <>\r\n          <Dashboard\r\n            // {...props}\r\n            user={user}\r\n            selectedGoal={selectedGoal}\r\n            createGoal={createGoal}\r\n            goals={goals}\r\n            setGoals={setGoals}\r\n            manageActivities={manageActivities}\r\n            manageCompletedGoals={manageCompletedGoals}\r\n            completedGoals={completedGoals}\r\n            manageCalendar={manageCalendar}\r\n            handleReturnToDashboard={handleReturnToDashboard}\r\n          />\r\n          {!activeGoals && <h2>Create a goal!</h2>}\r\n        </>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./fonts/Raleway-Regular.ttf\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Signup from \"./components/auth/Signup\";\r\nimport Login from \"./components/auth/Login\";\r\nimport NavBar from \"./components/navbar/NavBar\";\r\nimport Landing from \"./components/landing/Landing\";\r\nimport PersistentDrawer from \"./components/persistentDrawer/PersistentDrawer\";\r\nimport service from \"./utils/service\";\r\nimport { ActivityContextProvider } from \"./TheContext\";\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n  const updateUser = (userData) => setUser(userData);\r\n\r\n  // prevents having to login on refresh\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await service.isAuthenticated();\r\n      setUser(data.data.user || {});\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <ActivityContextProvider>\r\n      <div className=\"App\">\r\n        <Route\r\n          path=\"/\"\r\n          render={(props) => (\r\n            <NavBar {...props} user={user} setUser={updateUser} />\r\n          )}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\" render={(props) => <Landing {...props} />} />\r\n          <Route\r\n            exact\r\n            path=\"/auth/signup\"\r\n            render={(props) => <Signup {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/auth/login\"\r\n            render={(props) => <Login {...props} setUser={updateUser} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/dashboard\"\r\n            render={(props) => (\r\n              <PersistentDrawer {...props} user={user} setUser={updateUser} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </ActivityContextProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}